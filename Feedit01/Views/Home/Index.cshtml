@model IEnumerable<Feedit01.Models.Article>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    string view = "Index";
}

@using (Html.BeginForm(view, "Home", FormMethod.Get))
{
    <p>
        <div class="form-inline" style="margin-top:20px">

            <div class="form-group pull-left" style="margin-bottom:20px">
                <input type="button" value="Add new article" class="btn btn-info" onclick="location.href='@Url.Action("Create", "Home")'" />
                <div class="btn-group" role="group">
                    <button class="btn btn-success">Sorting</button>
                    <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span></button>
                    <ul class="dropdown-menu dropdown-menu-right">
                        <li>@Html.ActionLink("Votes", view, new { sortOrder = ViewBag.VoteSortParam, currentFilter = ViewBag.CurrentFilter })</li>
                        <li>@Html.ActionLink("Headline", view, new { sortOrder = ViewBag.HeadlineSortParam, currentFilter = ViewBag.CurrentFilter })</li>
                        <li>@Html.ActionLink("Author", view, new { sortOrder = ViewBag.AuthorSortParam, currentFilter = ViewBag.CurrentFilter })</li>
                    </ul>
                </div>
            </div>

            <div class="form-group pull-right">
                <a href='@string.Format("~/Home/", view)' class="btn btn-warning">Reset</a>
                <input type="text" class="form-control input-group-sm" placeholder="Type headline.." name="searchString" @ViewBag.CurrentFilter as string />
                <button type="submit" class="btn btn-info"><span class="glyphicon glyphicon-search"></span> Search</button>
            </div>

        </div>
    </p>
}
<table class="table">
    <tr style="background-color:ghostwhite">
        <th>
            @Html.DisplayNameFor(model => model.Votes)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Headline)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Author)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Votes)
            </td>
            <td>
                <a href=@Html.DisplayFor(modelItem => item.Url)>@Html.DisplayFor(modelItem => item.Headline)</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                <button type="button" class="btn btn-xs btn-success" onclick="location.href='@Url.Action("VoteUp", "Home", new { id=item.Id })'" @{ if(item.voteState == 1) { 
             @:disabled="disabled" 
        } }>
                    <span class="glyphicon glyphicon-arrow-up"></span>
                </button>
                <button type="button" class="btn btn-xs btn-danger" onclick="location.href='@Url.Action("VoteDown", "Home", new { id=item.Id })'" @{ if(item.voteState == 2) { 
             @:disabled="disabled" 
        } }>
                    <span class="glyphicon glyphicon-arrow-down"></span>
                </button>
            </td>
        </tr>
    }

</table>
